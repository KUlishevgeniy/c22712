import telebot 
import psycopg2
from telebot import types
import random

connection = psycopg2.connect(host='localhost', dbname='work', user='dialuna', password='Timka07') # –¥–∞-–¥–∞ :D
cursor = connection.cursor()

try:
	sel_query = """SELECT * FROM bot"""
	cursor.execute(sel_query)
except psycopg2.errors.UndefinedTable:
	connection.rollback()
	import problems
	sel_query = """SELECT * FROM bot"""
	cursor.execute(sel_query)
    
array = list(cursor.fetchall())

def select(ID):
    s_query = f'''SELECT * FROM bot where ID = {ID}'''
    cursor.execute(s_query)
    return cursor.fetchone()




bot = telebot.TeleBot('secret')

@bot.message_handler(commands=['start'])
def start(message):
	sti = open('st.webp', 'rb')
	bot.send_sticker(message.chat.id, sti)
	bot.send_message(message.chat.id, "–ô–û–£, {0.first_name}!\n–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ —Å–∫–µ–π—Ç–±–æ—Ä–¥–∏–Ω–≥–∞üòé".format(message.from_user, bot.get_me()))

	markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
	btn1 = types.KeyboardButton("–õ—É—á—à–∏–π —Å–∫–µ–π—Ç–±–æ—Ä–¥ —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞")
	btn2 = types.KeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–Ω—è")
	btn3 = types.KeyboardButton("–í—ã–±–æ—Ä —Å–∫–µ–π—Ç–∞ –ø–æ ID")
	markup.add(btn1, btn2, btn3)
	bot.send_message(message.chat.id,
                     '–õ—É—á—à–∏–π —Å–∫–µ–π—Ç–±–æ—Ä–¥ —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞ - —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –±—ã—Ç—å —Å–∞–º—ã–º –∫—Ä—É—Ç—ã–º.\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–Ω—è - —Ç–æ, —á—Ç–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.\n–í—ã–±–æ—Ä —Å–∫–µ–π—Ç–∞ –ø–æ ID - –ø—Ä–æ—Å—Ç–æ –¥–æ–≤–µ—Ä—å—Å—è –≤—ã–±–æ—Ä—É –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è :)\n',
                     reply_markup=markup)
                     
                     
@bot.message_handler(content_types=['text'])        
def handle_text(message):
	if (message.text.strip() == "–õ—É—á—à–∏–π —Å–∫–µ–π—Ç–±–æ—Ä–¥ —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞"):
		i = random.choice(array)
		inf = f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–¶–µ–Ω–∞: {i[3]}\n'
		bot.send_message(message.chat.id, inf)
		bot.send_photo(message.chat.id, open(i[4], 'rb'))
		cat = open('kotik.webm', 'rb')
		bot.send_video(message.chat.id, cat)
	elif (message.text.strip() == "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–Ω—è"):
		i = random.choice(array)
		inf = f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–¶–µ–Ω–∞: {i[3]}\n'
		bot.send_message(message.chat.id, inf)
		bot.send_photo(message.chat.id, open(i[4], 'rb'))
		cat = open('kotik.webm', 'rb')
		bot.send_video(message.chat.id, cat)	
	elif (message.text.strip() == "–í—ã–±–æ—Ä —Å–∫–µ–π—Ç–∞ –ø–æ ID"):
		sent = bot.send_message(message.chat.id,
                         f'–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä(ID, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ) –æ—Ç 1 –¥–æ 13, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏: ')
		bot.register_next_step_handler(sent, ret_id)
	else:
		bot.send_message(message.chat.id, "–ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–∞–º –∏–ª–∏ –±–ª–∏–∑–∫–∏–º —Å–∫–µ–π—Ç–±–æ—Ä–¥ –º–µ—á—Ç—ã. –°–∫–æ—Ä–µ–µ –ø—Ä–æ–±—É–π—Ç–µ! ")
		
def ret_id(message):
	try:
        	now_id = (message.text)
        	now_id = int(float(now_id))
        	z = list(select(now_id))
        	a2 = f'–ù–∞–∑–≤–∞–Ω–∏–µ: {z[2]};\n–¶–µ–Ω–∞: {z[3]};\n'
        	bot.send_message(message.chat.id, a2)
        	bot.send_photo(message.chat.id, open(z[4], 'rb'))
        	bot.send_message(message.chat.id, "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ ID –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–æ–π –≤ '–º–µ–Ω—é'")
	except ValueError:
		bot.send_message(message.chat.id,
                         "–ü–æ —Ç–∞–∫–æ–º—É ID –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ '–º–µ–Ω—é' –∫–Ω–æ–ø–æ–∫ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
		
		
	
bot.polling(none_stop=True, interval=0)

cursor.close()
connection.close()



